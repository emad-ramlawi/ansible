---
- hosts: all
  become: yes
  tasks: 
    
    - name: Add desired user 
      user:
        name: "{{ tomcat_username }}"
        comment: new user

    - name: Cleanup
      file:
        path: "{{ item }}"
        state: absent
      with_items:
        - /opt/apache-tomcat-{{ tomcat_version }}
        - /opt/apache-tomcat-{{ tomcat_version }}_{{ tomcat_appname }}
        - /opt/app-scripts
        - /usr/lib/systemd/system/"{{ tomcat_service_name }}".service

    - name: Force systemd to reread configs
      systemd:
        daemon_reload: yes

    - name: apache tomcat 7 download
      unarchive:
        src: "{{ tomcat_dl }}"
        dest: "/opt/"
        remote_src: yes
        owner: "{{ tomcat_username }}"
        group: "{{ tomcat_username }}"
        
    - name: Rename dir to add product name
      command: mv /opt/apache-tomcat-{{ tomcat_version }} /opt/apache-tomcat-{{ tomcat_version }}_{{ tomcat_appname }}

    - name: ensure a list of packages installed
      yum:
        name: "{{ packages }}"
      vars:
        packages:
        - git
        - python-boto3

    - name: chmod +x tomcat bin
      file:
        path: "/opt/apache-tomcat-{{ tomcat_version }}_{{ tomcat_appname }}/bin"
        mode: '0777'
        recurse: yes

    - name: S3 download redis_libs
      aws_s3:
        region: ca-central-1
        bucket: ids.ansible.artifcats
        object: redis_lib.zip
        dest: "/opt/redis_lib.zip"
        mode: get
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"

    - name: Unarchive redis_libs
      unarchive:
        src: "/opt/redis_lib.zip"
        dest: "/opt/apache-tomcat-{{ tomcat_version }}_{{ tomcat_appname }}/lib"
        remote_src: yes
        owner: "{{ tomcat_username }}"
        group: "{{ tomcat_username }}"

    - name: Template file redis-data-cache.properties
      template:
        src: "../templates/redis-data-cache.properties.j2"
        dest: "/opt/apache-tomcat-{{ tomcat_version }}_{{ tomcat_appname }}/conf/redis-data-cache.properties"
        owner: "{{ tomcat_username }}"
        group: "{{ tomcat_username }}"
        mode: '0755'
        remote_src: no

    - name: Template file setenv.sh
      template:
        src: "../templates/setenv.sh.j2"
        dest: "/opt/apache-tomcat-{{ tomcat_version }}_{{ tomcat_appname }}/bin/setenv.sh"
        owner: "{{ tomcat_username }}"
        group: "{{ tomcat_username }}"
        mode: '0777'
        remote_src: no

    - name: Configure service file
      template:
        src: "../templates/systemd_service.j2"
        dest: /usr/lib/systemd/system/{{ tomcat_service_name }}.service

    - name: enable tomcat service
      systemd:
        name: "{{ tomcat_service_name }}"
        state: restarted
        enabled: yes
        daemon_reload: yes